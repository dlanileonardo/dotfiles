#!/usr/bin/env bash
#
# bootstrap installs things.

cd "$(dirname "$0")/.."
DOTFILES_ROOT=$(pwd)

BUNDLE_DIR=~/.vim/bundle
NEOBUNDLE_INSTALL_DIR="$BUNDLE_DIR/neobundle.vim"

set -e

echo ''

info () {
  printf "  [ \033[00;34m..\033[0m ] $1"
}

user () {
  printf "\r  [ \033[0;33m?\033[0m ] $1 "
}

success () {
  printf "\r\033[2K  [ \033[00;32mOK\033[0m ] $1\n"
}

fail () {
  printf "\r\033[2K  [\033[0;31mFAIL\033[0m] $1\n"
  echo ''
  exit
}

require_sudo() {
  if [ $EUID != 0 ]; then
    sudo "$0" "$@"
    exit $?
  fi
}

setup_gitconfig () {
  if ! [ -f git/gitconfig.symlink ]
  then
    info 'setup gitconfig'

    git_credential='cache'
    if [ "$(uname -s)" == "Darwin" ]
    then
      git_credential='osxkeychain'
    fi

    user ' - What is your github author name?'
    read -e git_authorname
    user ' - What is your github author email?'
    read -e git_authoremail

    sed -e "s/AUTHORNAME/$git_authorname/g" -e "s/AUTHOREMAIL/$git_authoremail/g" -e "s/GIT_CREDENTIAL_HELPER/$git_credential/g" git/gitconfig.symlink.example > git/gitconfig.symlink

    success 'gitconfig'
  fi
}

link_file () {
  local src=$1 dst=$2

  local overwrite= backup= skip=
  local action=

  if [ -f "$dst" -o -d "$dst" -o -L "$dst" ]
  then

    if [ "$overwrite_all" == "false" ] && [ "$backup_all" == "false" ] && [ "$skip_all" == "false" ]
    then

      local currentSrc="$(readlink $dst)"

      if [ "$currentSrc" == "$src" ]
      then

        skip=true;

      else

        user "File already exists: $dst ($(basename "$src")), what do you want to do?\n\
        [s]kip, [S]kip all, [o]verwrite, [O]verwrite all, [b]ackup, [B]ackup all?"
        read -n 1 action

        case "$action" in
          o )
            overwrite=true;;
          O )
            overwrite_all=true;;
          b )
            backup=true;;
          B )
            backup_all=true;;
          s )
            skip=true;;
          S )
            skip_all=true;;
          * )
            ;;
        esac

      fi

    fi

    overwrite=${overwrite:-$overwrite_all}
    backup=${backup:-$backup_all}
    skip=${skip:-$skip_all}

    if [ "$overwrite" == "true" ]
    then
      rm -rf "$dst"
      success "removed $dst"
    fi

    if [ "$backup" == "true" ]
    then
      mv "$dst" "${dst}.backup"
      success "moved $dst to ${dst}.backup"
    fi

    if [ "$skip" == "true" ]
    then
      success "skipped $src"
    fi
  fi

  if [ "$skip" != "true" ]  # "false" or empty
  then
    ln -s "$1" "$2"
    success "linked $1 to $2"
  fi
}

setup_bootstrap() {
  run_cmd "rm -rf log/*"
}

run_cmd() {
  sh -c "(${1}) 1>> log/logs 2>> log/logs"
}

run_apt_get() {
  sh -c "sudo apt-get install -y $1"
}

install_dotfiles () {
  info 'installing dotfiles'

  local overwrite_all=false backup_all=false skip_all=false

  for src in $(find -H "$DOTFILES_ROOT" -maxdepth 2 -name '*.symlink')
  do
    dst="$HOME/.$(basename "${src%.*}")"
    link_file "$src" "$dst"
  done
}

install_dependencies () {
  info 'installing dependencies'

  local overwrite_all=false backup_all=false skip_all=false

  run_cmd "$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"
  success "The oh-my-zsh installed!"

  run_cmd "cd base16-builder; ./base16; cd output; chmod a+x -R .;bash guake/base16-twilight.dark.sh; bash gnome-terminal/base16-twilight.dark.sh"
  success "Base16 has defined with sucess!"

  run_apt_get "python-fontforge"
  run_cmd "cd awesome-terminal-fonts; ./droid.sh"
  success "Awsome Fonts Installed"

  mkdir -p ~/.oh-my-zsh/custom/themes/
  link_file $DOTFILES_ROOT/powerlevel9k ~/.oh-my-zsh/custom/themes/powerlevel9k
}

install_vimplugins () {
  info "install Plugin neobundle.vim"
  run_cmd 'curl https://raw.githubusercontent.com/Shougo/neobundle.vim/master/bin/install.sh > install.sh'
  if [ ! -d "$NEOBUNDLE_INSTALL_DIR" ];
    then
    run_cmd 'sh ./install.sh'
    run_cmd 'rm install.sh'
  fi

  success "Plugin neobundle.vim Installed"

  info "installing vimplugins"
  local overwrite_all=false backup_all=false skip_all=false
  run_cmd '~/.vim/bundle/neobundle.vim/bin/neoinstall'
  success "Vim Plugins Installed"

  link_file ~/.vim/bundle/base16-vim/colors ~/.vim/colors
  link_file ~/.dotfiles/vimfiles/doc ~/.vim/doc
  mkdir -p ~/.vim/.cache/unite
}

# require_sudo
setup_bootstrap
setup_gitconfig
install_dependencies
install_dotfiles
install_vimplugins

success "All installed!"
echo ""
